/*
 * generated by Xtext 2.15.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Scenario";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	iv_ruleScenario=ruleScenario
	{ $current=$iv_ruleScenario.current; }
	EOF;

// Rule Scenario
ruleScenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='debut Scenario'
		{
			newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getDebutScenarioKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getScenarioAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScenarioRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='titre'
		{
			newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getTitreKeyword_2());
		}
		(
			(
				lv_titleScenario_3_0=RULE_STRING
				{
					newLeafNode(lv_titleScenario_3_0, grammarAccess.getScenarioAccess().getTitleScenarioSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScenarioRule());
					}
					setWithLastConsumed(
						$current,
						"titleScenario",
						lv_titleScenario_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getCasDeTestsCasDeTestParserRuleCall_4_0());
				}
				lv_casDeTests_4_0=ruleCasDeTest
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					add(
						$current,
						"casDeTests",
						lv_casDeTests_4_0,
						"org.xtext.example.mydsl.MyDsl.CasDeTest");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_5='fin Scenario'
		{
			newLeafNode(otherlv_5, grammarAccess.getScenarioAccess().getFinScenarioKeyword_5());
		}
	)
;

// Entry rule entryRuleCasDeTest
entryRuleCasDeTest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCasDeTestRule()); }
	iv_ruleCasDeTest=ruleCasDeTest
	{ $current=$iv_ruleCasDeTest.current; }
	EOF;

// Rule CasDeTest
ruleCasDeTest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Cas de test : '
		{
			newLeafNode(otherlv_0, grammarAccess.getCasDeTestAccess().getCasDeTestKeyword_0());
		}
		(
			(
				lv_titreCasDeTest_1_0=RULE_STRING
				{
					newLeafNode(lv_titreCasDeTest_1_0, grammarAccess.getCasDeTestAccess().getTitreCasDeTestSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCasDeTestRule());
					}
					setWithLastConsumed(
						$current,
						"titreCasDeTest",
						lv_titreCasDeTest_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCasDeTestAccess().getActionsActionParserRuleCall_2_0());
				}
				lv_actions_2_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCasDeTestRule());
					}
					add(
						$current,
						"actions",
						lv_actions_2_0,
						"org.xtext.example.mydsl.MyDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_action_0_0=RULE_TYPE
				{
					newLeafNode(lv_action_0_0, grammarAccess.getActionAccess().getActionTYPETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"action",
						lv_action_0_0,
						"org.xtext.example.mydsl.MyDsl.TYPE");
				}
			)
		)
		(
			(
				(
					lv_valeur_1_0=RULE_STRING
					{
						newLeafNode(lv_valeur_1_0, grammarAccess.getActionAccess().getValeurSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed(
							$current,
							"valeur",
							lv_valeur_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					(
						lv_valeur_2_0=RULE_STRING
						{
							newLeafNode(lv_valeur_2_0, grammarAccess.getActionAccess().getValeurSTRINGTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionRule());
							}
							setWithLastConsumed(
								$current,
								"valeur",
								lv_valeur_2_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				otherlv_3='|'
				{
					newLeafNode(otherlv_3, grammarAccess.getActionAccess().getVerticalLineKeyword_1_1_1());
				}
				(
					(
						lv_texte_4_0=RULE_STRING
						{
							newLeafNode(lv_texte_4_0, grammarAccess.getActionAccess().getTexteSTRINGTerminalRuleCall_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionRule());
							}
							setWithLastConsumed(
								$current,
								"texte",
								lv_texte_4_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)
	)
;

RULE_TYPE : ('ouvrir url'|'saisir identifiant'|'saisir mot de passe'|'clic id='|'naviguer'|'verifier id=');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
