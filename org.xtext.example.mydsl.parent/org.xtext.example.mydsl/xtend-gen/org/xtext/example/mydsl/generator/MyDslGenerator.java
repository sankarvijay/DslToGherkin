/**
 * generated by Xtext 2.15.0
 */
package org.xtext.example.mydsl.generator;

import com.google.common.base.Objects;
import com.google.common.collect.Iterators;
import java.util.List;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.xtext.example.mydsl.myDsl.Action;
import org.xtext.example.mydsl.myDsl.CasDeTest;
import org.xtext.example.mydsl.myDsl.Scenario;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    List<Scenario> link = IteratorExtensions.<Scenario>toList(Iterators.<Scenario>filter(resource.getAllContents(), Scenario.class));
    EList<CasDeTest> casDeTests = link.get(0).getCasDeTests();
    int i = 0;
    do {
      {
        StringConcatenation _builder = new StringConcatenation();
        String _string = link.get(0).getName().toString();
        _builder.append(_string);
        _builder.append(".feature");
        StringConcatenation _builder_1 = new StringConcatenation();
        _builder_1.append("@");
        String _string_1 = link.get(0).getName().toString();
        _builder_1.append(_string_1);
        _builder_1.newLineIfNotEmpty();
        _builder_1.newLine();
        _builder_1.append("Feature: ");
        String _string_2 = link.get(0).getTitleScenario().toString();
        _builder_1.append(_string_2);
        _builder_1.newLineIfNotEmpty();
        {
          EList<CasDeTest> _casDeTests = link.get(i).getCasDeTests();
          for(final CasDeTest c : _casDeTests) {
            _builder_1.append("Scen");
            _builder_1.append(i);
            _builder_1.append(" : ");
            String _string_3 = c.getTitreCasDeTest().toString();
            _builder_1.append(_string_3);
            _builder_1.newLineIfNotEmpty();
          }
        }
        _builder_1.append("\t");
        _builder_1.newLine();
        {
          EList<CasDeTest> _casDeTests_1 = link.get(i).getCasDeTests();
          for(final CasDeTest b : _casDeTests_1) {
            _builder_1.append("\t");
            _builder_1.newLine();
            _builder_1.append("\t");
            _builder_1.append("Scenario Outline: ");
            String _string_4 = b.getTitreCasDeTest().toString();
            _builder_1.append(_string_4, "\t");
            _builder_1.append("\t\t");
            _builder_1.newLineIfNotEmpty();
            {
              EList<Action> _actions = b.getActions();
              for(final Action a : _actions) {
                {
                  String _action = a.getAction();
                  boolean _equals = Objects.equal(_action, "ouvrir url");
                  if (_equals) {
                    _builder_1.append("\t");
                    _builder_1.append("Given go to the main url <");
                    String _valeur = a.getValeur();
                    _builder_1.append(_valeur, "\t");
                    _builder_1.append(">");
                    _builder_1.newLineIfNotEmpty();
                  }
                }
                {
                  if ((Objects.equal(a.getAction(), "saisir identifiant") || Objects.equal(a.getAction(), "saisir mot de passe"))) {
                    _builder_1.append("\t");
                    _builder_1.append("And put the value <");
                    String _valeur_1 = a.getValeur();
                    _builder_1.append(_valeur_1, "\t");
                    _builder_1.append("> in the web element");
                    _builder_1.newLineIfNotEmpty();
                  }
                }
                {
                  if ((Objects.equal(a.getAction(), "clic id=") || Objects.equal(a.getAction(), "verifier id="))) {
                    _builder_1.append("\t");
                    _builder_1.append("And click \'normal\' the web element <");
                    String _valeur_2 = a.getValeur();
                    _builder_1.append(_valeur_2, "\t");
                    _builder_1.append(" | ");
                    String _texte = a.getTexte();
                    _builder_1.append(_texte, "\t");
                    _builder_1.append(">");
                    _builder_1.newLineIfNotEmpty();
                  }
                }
                {
                  String _action_1 = a.getAction();
                  boolean _equals_1 = Objects.equal(_action_1, "verifier id=");
                  if (_equals_1) {
                    _builder_1.append("\t");
                    _builder_1.append("And check the web element <");
                    String _valeur_3 = a.getValeur();
                    _builder_1.append(_valeur_3, "\t");
                    _builder_1.append(" | ");
                    String _texte_1 = a.getTexte();
                    _builder_1.append(_texte_1, "\t");
                    _builder_1.append(">");
                    _builder_1.newLineIfNotEmpty();
                  }
                }
                {
                  String _action_2 = a.getAction();
                  boolean _equals_2 = Objects.equal(_action_2, "naviguer");
                  if (_equals_2) {
                    _builder_1.append("\t");
                    _builder_1.append("And navigate to the page <");
                    String _valeur_4 = a.getValeur();
                    _builder_1.append(_valeur_4, "\t");
                    _builder_1.append(">");
                    _builder_1.newLineIfNotEmpty();
                  }
                }
              }
            }
          }
        }
        _builder_1.append("\t");
        _builder_1.append("Examples:");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("|\t|");
        _builder_1.newLine();
        _builder_1.append("\t");
        _builder_1.append("|\t|");
        _builder_1.newLine();
        fsa.generateFile(_builder.toString(), _builder_1);
        i++;
      }
    } while((i < casDeTests.size()));
  }
}
